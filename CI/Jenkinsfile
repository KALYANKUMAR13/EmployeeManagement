pipeline {
     agent {
    docker {
      image 'kalyankumar13/mavenjdk:v4'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
 
  stages {
      
    stage('Checkout') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
        
        checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[credentialsId: 'github-cred', url: 'https://github.com/KALYANKUMAR13/EmployeeManagement.git']])
      
          echo 'Succfully fetched the code'
          sh 'pwd'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -lrth'
        // build the project and create a JAR file
        sh 'mvn clean package'
        echo 'build Successfully!'
        sh 'pwd'
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "kalyankumar13/webappempmanagement:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            sh 'cd CI && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }

   
  }

}